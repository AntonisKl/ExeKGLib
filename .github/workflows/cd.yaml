name: Continuous Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cd:
    name: CD
    if: github.repository == 'boschresearch/ExeKGLib'
    runs-on: [self-hosted, Linux]
    container: ubuntu:latest

    steps:
      - name: Install prerequisites
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install --yes \
            curl \
            gcc \
            git \
            python3-dev \
            python3-venv

      - name: Set up poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --force
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: poetry install

      - name: Configure git
        run: |
          git config --add --global safe.directory "$GITHUB_WORKSPACE"
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@bosch.com"

      - name: Bump patch version
        run: poetry run poe bump-version-tag patch

#      - name: Deploy docs
#        run: |
#          poetry run poe test
#          poetry run poe docs
#          poetry run poe deploy-docs --push --alias latest

#      - name: Deploy package
#        run: |
#          poetry run poe deploy-package \
#            --repository production \
#            --username ${{ secrets.ARTIFACTORY_RESOURCE_USER }} \
#            --password ${{ secrets.ARTIFACTORY_RESOURCE_TOKEN }}

      - name: Push version tag
        run: poetry run poe push-latest-version-tag

  update_release_draft:
    name: Update release notes
    runs-on: [self-hosted, Linux]
    container: ubuntu:latest

    steps:
      - name: Set GHE_HOST
        run: echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      - uses: release-drafter/release-drafter@v5.21.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
